<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Louis&#39; Blog</title>
  <subtitle>All about software development for the web</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://www.louisbourque.ca/blog/"/>
  <updated>2016-10-27T19:52:45.733Z</updated>
  <id>http://www.louisbourque.ca/blog/</id>
  
  <author>
    <name>Louis Bourque</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Animated CSS Label</title>
    <link href="http://www.louisbourque.ca/blog/2016/10/animated-input-label/"/>
    <id>http://www.louisbourque.ca/blog/2016/10/animated-input-label/</id>
    <published>2016-10-27T06:00:00.000Z</published>
    <updated>2016-10-27T19:52:45.733Z</updated>
    
    <content type="html"><![CDATA[<p>A simple example of an input field with placeholder text which moves out of the way when text is entered:</p>
<form><br>  <input name="myInput" id="myInput" class="animated-input" type="text"><label for="myInput">Placeholder</label><br></form>


<h2 id="How-it’s-done"><a href="#How-it’s-done" class="headerlink" title="How it’s done"></a>How it’s done</h2><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"myInput"</span> <span class="attr">id</span>=<span class="string">"myInput"</span> <span class="attr">class</span>=<span class="string">"animated-input"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"myInput"</span>&gt;</span>Placeholder<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="text"]</span> &#123;</div><div class="line">  <span class="attribute">box-sizing</span>: border-box;</div><div class="line">  <span class="attribute">height</span>: <span class="built_in">calc</span>(2em + 1px);</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span>;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#999</span>;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</div><div class="line">  <span class="attribute">resize</span>: none;</div><div class="line">  <span class="attribute">outline</span>: none;</div><div class="line">  <span class="attribute">display</span>: block;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">1em</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="text"]</span><span class="selector-pseudo">:focus</span> &#123;</div><div class="line">  <span class="attribute">border-color</span>: <span class="number">#00bafa</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="text"]</span><span class="selector-pseudo">:focus</span> + <span class="selector-tag">label</span> &#123;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#00bafa</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="text"]</span><span class="selector-pseudo">:focus</span> + <span class="selector-tag">label</span>,</div><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="text"]</span><span class="selector-class">.filled-in</span> + <span class="selector-tag">label</span> &#123;</div><div class="line">  <span class="attribute">transition-duration</span>: .<span class="number">2s</span>;</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(0, -3em) <span class="built_in">scale</span>(0.9, 0.9);</div><div class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="text"]</span> + <span class="selector-tag">label</span> &#123;</div><div class="line">  <span class="attribute">display</span>: inline-block;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="built_in">calc</span>(1em + 2px);</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">2px</span>;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</div><div class="line">  <span class="attribute">white-space</span>: nowrap;</div><div class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span> ease;</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(0, -1.6em)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Add listener for when input is blurred</span></div><div class="line"><span class="keyword">var</span> matches = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.animated-input'</span>);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;matches.length; i++)&#123;</div><div class="line">  addEvent(matches[i],<span class="string">'blur'</span>,onAnimatedInputBlur);</div><div class="line">&#125;</div><div class="line"><span class="comment">// when input is blurred, check if the value is empty</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">onAnimatedInputBlur</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">  <span class="keyword">if</span>(event.target.value)&#123;</div><div class="line">    <span class="comment">//if input is non-empty, keep placeholder out of the way</span></div><div class="line">    addClass(event.target,<span class="string">'filled-in'</span>);</div><div class="line">  &#125;<span class="keyword">else</span>&#123;</div><div class="line">    removeClass(event.target,<span class="string">'filled-in'</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">// helper functions</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params">el, className</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> el.classList ? el.classList.contains(className) : <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\\b'</span>+ className+<span class="string">'\\b'</span>).test(el.className);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addClass</span>(<span class="params">el, className</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (el.classList) el.classList.add(className);</div><div class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (!hasClass(el, className)) el.className += <span class="string">' '</span> + className;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeClass</span>(<span class="params">el, className</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (el.classList) el.classList.remove(className);</div><div class="line">  <span class="keyword">else</span> el.className = el.className.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\\b'</span>+ className+<span class="string">'\\b'</span>, <span class="string">'g'</span>), <span class="string">''</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addEvent</span>(<span class="params">el, type, handler</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (el.attachEvent) el.attachEvent(<span class="string">'on'</span>+type, handler); <span class="keyword">else</span> el.addEventListener(type, handler);</div><div class="line">&#125;</div></pre></td></tr></table></figure>

<script>
var matches = document.querySelectorAll('.animated-input');

for (var i=0; i<matches.length; i++){
  addEvent(matches[i],'blur',onAnimatedInputBlur);
}

function onAnimatedInputBlur(event){
  if(event.target.value){
    addClass(event.target,'filled-in');
  }else{
    removeClass(event.target,'filled-in');
  }
}

function hasClass(el, className) {
  return el.classList ? el.classList.contains(className) : new RegExp('\\b'+ className+'\\b').test(el.className);
}

function addClass(el, className) {
  if (el.classList) el.classList.add(className);
  else if (!hasClass(el, className)) el.className += ' ' + className;
}

function removeClass(el, className) {
  if (el.classList) el.classList.remove(className);
  else el.className = el.className.replace(new RegExp('\\b'+ className+'\\b', 'g'), '');
}

function addEvent(el, type, handler) {
  if (el.attachEvent) el.attachEvent('on'+type, handler); else el.addEventListener(type, handler);
}
</script>
<style>
input[type="text"] {
  box-sizing: border-box;
  height: calc(2em + 1px);
  padding: 0.5em;
  border: 1px solid #999;
  background: #fff;
  resize: none;
  outline: none;
  display: block;
  line-height: 1em;
}

input[type="text"]:focus {
  border-color: #00bafa;
}
input[type="text"]:focus + label {
  color: #00bafa;
}
input[type="text"]:focus + label,
input[type="text"].filled-in + label {
  transition-duration: .2s;
  transform: translate(0, -3em) scale(0.9, 0.9);
  background-color: #fff;
}

input[type="text"] + label {
  display: inline-block;
  margin: 0 calc(1em + 2px);
  padding: 0 2px;
  color: #999;
  white-space: nowrap;
  transition: 0.3s ease;
  transform: translate(0, -1.6em)
}
</style>

]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A simple example of an input field with placeholder text which moves out of the way when text is entered:&lt;/p&gt;
&lt;form&gt;&lt;br&gt;  &lt;input name=&quot;my
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Free Developer Business Card</title>
    <link href="http://www.louisbourque.ca/blog/2016/09/Developer-Business-Card/"/>
    <id>http://www.louisbourque.ca/blog/2016/09/Developer-Business-Card/</id>
    <published>2016-09-19T22:37:09.000Z</published>
    <updated>2016-09-20T06:02:38.006Z</updated>
    
    <content type="html"><![CDATA[<p>While thinking up ideas for business card designs, I came across this great idea for web developers. I created some samples, feel free to download and modify. If you come up with a cool improvement, feel free to <a href="mailto:louis@louisbourque.ca?Subject=Check out my cool business card design!" target="_blank" rel="external">share it with me</a>.</p>
<p>Click the preview image to download an XCF file which can easily be edited in <a href="https://www.gimp.org/" target="_blank" rel="external">GIMP</a>.</p>
<p><a href="/blog/2016/09/Developer-Business-Card/Business Card Front.xcf"><img src="/blog/2016/09/Developer-Business-Card/Business Card Front.png" alt="Business Card Front View (company)"></a><br><a href="/blog/2016/09/Developer-Business-Card/Business Card Front-personal.xcf"><img src="/blog/2016/09/Developer-Business-Card/Business Card Front-personal.png" alt="Business Card Front View (personal)"></a><br><a href="/blog/2016/09/Developer-Business-Card/Business Card Back-json.xcf"><img src="/blog/2016/09/Developer-Business-Card/Business Card Back-json.png" alt="Business Card Back View with JSON style"></a><br><a href="/blog/2016/09/Developer-Business-Card/Business Card Back-css.xcf"><img src="/blog/2016/09/Developer-Business-Card/Business Card Back-css.png" alt="Business Card Back View with CSS style"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;While thinking up ideas for business card designs, I came across this great idea for web developers. I created some samples, feel free to
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.louisbourque.ca/blog/2016/08/hello-world/"/>
    <id>http://www.louisbourque.ca/blog/2016/08/hello-world/</id>
    <published>2016-08-30T06:00:00.000Z</published>
    <updated>2016-09-19T22:26:25.201Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to my first blog post. In this blog I hope to write about the things that interest me with a focus on web development and programming.</p>
<p>I’m a minimalist in everything I do. I prefer simple solutions over complexity. Recently, I setup a web server on a Raspberry Pi with Wordpress. I played around with it for a while. It’s a great product with amazing plugins. Easy to use and write great posts. Yet, the complexity was bugging me. Pages were a little slow to load, even over my home network. The default theme had way too much CSS and JavaScript for my liking. The admin interface has so many features, I felt the constant urge to tweak settings.</p>
<p>I decided instead to go with a static blog. <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a> looked like it had a nice balance of functionality and simplicity. It lets me create new posts using MarkDown with minimal friction and generates an RSS feed. All posts are just files in a folder, making backups a breeze and moving to a new platform should be effortless.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to my first blog post. In this blog I hope to write about the things that interest me with a focus on web development and program
    
    </summary>
    
    
  </entry>
  
</feed>
